# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pub_sub_pb2 as pub__sub__pb2


class RawDataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UpdateHistory = channel.unary_unary(
                '/RTRAM.RawData/UpdateHistory',
                request_serializer=pub__sub__pb2.RawTopic.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )


class RawDataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UpdateHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RawDataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UpdateHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateHistory,
                    request_deserializer=pub__sub__pb2.RawTopic.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RTRAM.RawData', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RawData(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UpdateHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.RawData/UpdateHistory',
            pub__sub__pb2.RawTopic.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class MakeInputsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckFrame = channel.unary_unary(
                '/RTRAM.MakeInputs/CheckFrame',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )
        self.GetHistory = channel.unary_unary(
                '/RTRAM.MakeInputs/GetHistory',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.RawTopic.FromString,
                )
        self.UpdateGrid = channel.unary_unary(
                '/RTRAM.MakeInputs/UpdateGrid',
                request_serializer=pub__sub__pb2.GridTopic.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )


class MakeInputsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateGrid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MakeInputsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFrame,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
            'GetHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistory,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.RawTopic.SerializeToString,
            ),
            'UpdateGrid': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateGrid,
                    request_deserializer=pub__sub__pb2.GridTopic.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RTRAM.MakeInputs', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MakeInputs(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.MakeInputs/CheckFrame',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.MakeInputs/GetHistory',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.RawTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateGrid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.MakeInputs/UpdateGrid',
            pub__sub__pb2.GridTopic.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NetworkForwardStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckFrame = channel.unary_unary(
                '/RTRAM.NetworkForward/CheckFrame',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )
        self.GetGrid = channel.unary_unary(
                '/RTRAM.NetworkForward/GetGrid',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.GridTopic.FromString,
                )
        self.UpdatePred = channel.unary_unary(
                '/RTRAM.NetworkForward/UpdatePred',
                request_serializer=pub__sub__pb2.PredTopic.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )


class NetworkForwardServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGrid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePred(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetworkForwardServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFrame,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
            'GetGrid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGrid,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.GridTopic.SerializeToString,
            ),
            'UpdatePred': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePred,
                    request_deserializer=pub__sub__pb2.PredTopic.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RTRAM.NetworkForward', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NetworkForward(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.NetworkForward/CheckFrame',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGrid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.NetworkForward/GetGrid',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.GridTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePred(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.NetworkForward/UpdatePred',
            pub__sub__pb2.PredTopic.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RiskAssessmentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckFrame = channel.unary_unary(
                '/RTRAM.RiskAssessment/CheckFrame',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )
        self.GetPred = channel.unary_unary(
                '/RTRAM.RiskAssessment/GetPred',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.PredTopic.FromString,
                )
        self.UpdateRisk = channel.unary_unary(
                '/RTRAM.RiskAssessment/UpdateRisk',
                request_serializer=pub__sub__pb2.RiskTopic.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )


class RiskAssessmentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPred(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RiskAssessmentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFrame,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
            'GetPred': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPred,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.PredTopic.SerializeToString,
            ),
            'UpdateRisk': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRisk,
                    request_deserializer=pub__sub__pb2.RiskTopic.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RTRAM.RiskAssessment', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RiskAssessment(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.RiskAssessment/CheckFrame',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPred(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.RiskAssessment/GetPred',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.PredTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.RiskAssessment/UpdateRisk',
            pub__sub__pb2.RiskTopic.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VisualizeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckFrame = channel.unary_unary(
                '/RTRAM.Visualize/CheckFrame',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.Flag.FromString,
                )
        self.GetRisk = channel.unary_unary(
                '/RTRAM.Visualize/GetRisk',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.RiskTopic.FromString,
                )
        self.GetPred = channel.unary_unary(
                '/RTRAM.Visualize/GetPred',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.PredTopic.FromString,
                )
        self.GetGrid = channel.unary_unary(
                '/RTRAM.Visualize/GetGrid',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.GridTopic.FromString,
                )
        self.GetHistory = channel.unary_unary(
                '/RTRAM.Visualize/GetHistory',
                request_serializer=pub__sub__pb2.TimeRequest.SerializeToString,
                response_deserializer=pub__sub__pb2.RawTopic.FromString,
                )


class VisualizeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRisk(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPred(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGrid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VisualizeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckFrame,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.Flag.SerializeToString,
            ),
            'GetRisk': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRisk,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.RiskTopic.SerializeToString,
            ),
            'GetPred': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPred,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.PredTopic.SerializeToString,
            ),
            'GetGrid': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGrid,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.GridTopic.SerializeToString,
            ),
            'GetHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHistory,
                    request_deserializer=pub__sub__pb2.TimeRequest.FromString,
                    response_serializer=pub__sub__pb2.RawTopic.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RTRAM.Visualize', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Visualize(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.Visualize/CheckFrame',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.Flag.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRisk(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.Visualize/GetRisk',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.RiskTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPred(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.Visualize/GetPred',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.PredTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGrid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.Visualize/GetGrid',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.GridTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RTRAM.Visualize/GetHistory',
            pub__sub__pb2.TimeRequest.SerializeToString,
            pub__sub__pb2.RawTopic.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
